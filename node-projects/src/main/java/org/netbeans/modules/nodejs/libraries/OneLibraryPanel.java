/* Copyright (C) 2012 Tim Boudreau

 Permission is hereby granted, free of charge, to any person obtaining a copy 
 of this software and associated documentation files (the "Software"), to 
 deal in the Software without restriction, including without limitation the 
 rights to use, copy, modify, merge, publish, distribute, sublicense, and/or 
 sell copies of the Software, and to permit persons to whom the Software is 
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in all 
 copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR 
 COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER 
 IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN 
 CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. */
package org.netbeans.modules.nodejs.libraries;

import java.util.Arrays;

/**
 *
 * @author Tim Boudreau
 */
final class OneLibraryPanel extends javax.swing.JPanel {
    public OneLibraryPanel ( String name, String description, String author ) {
        initComponents();
        //GTK UI delegate is screwy as usual
        if (descriptionLabel.getUI().getClass().getName().contains( "synth" )) {
            descriptionLabel.setUI( new javax.swing.plaf.basic.BasicTextAreaUI() );
        }
        descriptionLabel.setLineWrap( true );
        descriptionLabel.setWrapStyleWord( true );
        descriptionLabel.setBackground( getBackground() );
        setProperties( name, description, author );
    }

    boolean isSelected () {
        return selectBox.isSelected();
    }

    public String getModuleName () {
        return nameLabel.getText().trim();
    }
    private static final int PAD_TO_CHARS = 35;

    void setProperties ( String name, String description, String author ) {
        if (name.length() < PAD_TO_CHARS) {
            char[] c = new char[PAD_TO_CHARS - name.length()];
            Arrays.fill( c, ' ' );
            name = name + new String( c );
        }
        nameLabel.setText( name );
        String desc = description;
        descriptionLabel.setText( desc );
        descriptionLabel.setToolTipText( author );
        invalidate();
        revalidate();
        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings ("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        selectBox = new javax.swing.JCheckBox();
        nameLabel = new javax.swing.JLabel();
        descriptionLabel = new javax.swing.JTextArea();

        setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, javax.swing.UIManager.getDefaults().getColor("controlShadow")), javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5)));
        setLayout(new java.awt.GridBagLayout());

        selectBox.setText(org.openide.util.NbBundle.getMessage(OneLibraryPanel.class, "OneLibraryPanel.selectBox.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
        add(selectBox, gridBagConstraints);

        nameLabel.setBackground(javax.swing.UIManager.getDefaults().getColor("control"));
        nameLabel.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        nameLabel.setLabelFor(selectBox);
        nameLabel.setText(org.openide.util.NbBundle.getMessage(OneLibraryPanel.class, "OneLibraryPanel.nameLabel.text")); // NOI18N
        nameLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nameClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 27;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        add(nameLabel, gridBagConstraints);

        descriptionLabel.setBackground(getBackground());
        descriptionLabel.setColumns(20);
        descriptionLabel.setEditable(false);
        descriptionLabel.setLineWrap(true);
        descriptionLabel.setText(org.openide.util.NbBundle.getMessage(OneLibraryPanel.class, "OneLibraryPanel.descriptionLabel.text")); // NOI18N
        descriptionLabel.setWrapStyleWord(true);
        descriptionLabel.setAutoscrolls(false);
        descriptionLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        add(descriptionLabel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void nameClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nameClicked
        selectBox.setSelected( !selectBox.isSelected() );
    }//GEN-LAST:event_nameClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea descriptionLabel;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JCheckBox selectBox;
    // End of variables declaration//GEN-END:variables
}
